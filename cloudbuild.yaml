steps:

- id: 'execute-unit-tests' 
  name: maven:3-eclipse-temurin-17-alpine
  entrypoint: mvn
  args: ["test"]
  dir: 'cirene-svc'
  allowExitCodes: [1]
  waitFor: ['-']

- id: 'build-push-application' 
  name: 'gcr.io/k8s-skaffold/skaffold'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    # Build and push images
    skaffold build --file-output=/workspace/artifacts.json \
                   --default-repo=$LOCATION-docker.pkg.dev/$PROJECT_ID/cirene-svc \
                   --push=true    
  waitFor: ['execute-unit-tests']                 

- id: 'deploy-create-release-cd' 
  name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud config set deploy/region $LOCATION
    gcloud deploy releases create rel-${SHORT_SHA} \
                        --delivery-pipeline devops-demo-cd-pipeline \
                        --description "$(git log -1  --pretty='%s')" \
                        --build-artifacts /workspace/artifacts.json \
                        --annotations "commit_ui=https://github.com/cssantos0/devops-sample-app-demo/commit/$COMMIT_SHA" 
  waitFor: ['build-push-application']                      

- id: 'func-tests-get-svc-ip'
  name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  dir: 'tests/functional-tests'
  args:
  - -xe
  - -c
  - |
    #gcloud components install kubectl
    apt-get install kubectl
    gcloud container clusters get-credentials gke-staging-cluster --zone ${_GCP_ZONE} --project $PROJECT_ID
    kubectl -n demo-app-staging get svc cirene-svc --output jsonpath='{.status.loadBalancer.ingress[0].ip}' > /workspace/cirenehost.txt
  waitFor: ['deploy-create-release-cd']

- id: 'func-tests-show-svc-ip'
  name: ubuntu
  entrypoint: bash
  dir: 'tests/functional-tests'
  args:
    - -c
    - |      
      echo "HOST: " $(cat /workspace/cirenehost.txt)  
  waitFor: ['func-tests-get-svc-ip']

- id: 'execute-func-tests'
  name: ubuntu
  entrypoint: bash
  dir: 'tests/functional-tests'
  args:
    - -c
    - |
      apt-get update 
      apt install docker.io -y
      docker --version     

      docker build -t functional-tests --build-arg CIRENE_URL_HOST=$(cat /workspace/cirenehost.txt) .
      docker run functional-tests
  waitFor: ['func-tests-get-svc-ip']

artifacts:
  objects:
    location: 'gs://devops-demo-prj-cloudbuild-artifacts/$PROJECT_ID/$BUILD_ID'
    paths:
      - '/workspace/cirene-svc/target/surefire-reports/*'
      - '/workspace/artifacts.json'

options:
  machineType: E2_HIGHCPU_8

timeout: 3600s
