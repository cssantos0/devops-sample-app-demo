steps:

#- name: maven:3-eclipse-temurin-17-alpine
#  entrypoint: mvn
#  args: ["test"]
#  dir: 'cirene-svc'
#  allowExitCodes: [1]

#- name: 'gcr.io/k8s-skaffold/skaffold'
#  entrypoint: 'sh'
#  args:
#  - -xe
#  - -c
#  - |
#    # Build and push images
#    skaffold build --file-output=/workspace/artifacts.json \
#                   --default-repo=$LOCATION-docker.pkg.dev/$PROJECT_ID/cirene-svc \
#                   --push=true    

#- name: 'google/cloud-sdk:latest'
#  entrypoint: 'sh'
#  args:
#  - -xe
#  - -c
#  - |
#    gcloud config set deploy/region $LOCATION
#    gcloud deploy releases create rel-${SHORT_SHA} \
#                        --delivery-pipeline devops-demo-cd-pipeline \
#                        --description "$(git log -1  --pretty='%s')" \
#                        --build-artifacts /workspace/artifacts.json \
#                        --annotations "commit_ui=https://github.com/cssantos0/devops-sample-app-demo/commit/$COMMIT_SHA" 

- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud components install kubectl
    gcloud container clusters get-credentials gke-staging-cluster --zone ${_GCP_ZONE} --project $PROJECT_ID
    CIRENE_EXT_IP=$(kubectl -n demo-app-staging get svc cirene-svc --output jsonpath='{.status.loadBalancer.ingress[0].ip}')
    CIRENE_HOST="${CIRENE_EXT_IP}:4000"
    echo "${CIRENE_HOST}" > /workspace/cirenehost.txt

- name: ubuntu
  entrypoint: bash
  args:
    - -c
    - |
      # Read from "/workspace"
      CIRENE_HOST=$(cat /workspace/cirenehost.txt)    
      echo $CIRENE_HOST

#artifacts:
#  objects:
#    location: 'gs://devops-demo-prj-cloudbuild-artifacts/$PROJECT_ID/$BUILD_ID'
#    paths:
#      - '/workspace/cirene-svc/target/surefire-reports/*'
#      - '/workspace/artifacts.json'

options:
  machineType: E2_HIGHCPU_8

timeout: 3600s